const { glDepartment, wlCategory } = require("../models");
const { Model } = require('sequelize');
module.exports = (sequelize, DataTypes) => {
  class wlWorkload extends Model {}
  wlWorkload.init(
    {
        id: { type: DataTypes.INTEGER, allowNull: false, primaryKey: true, autoIncrement: true, },
        department_id: { type: DataTypes.INTEGER },
        wl_category_id: { type: DataTypes.INTEGER },
        parent_ticket_id: { type: DataTypes.INTEGER },
        customer_id: { type: DataTypes.INTEGER },
        resolver_id: { type: DataTypes.INTEGER },
        group_id: { type: DataTypes.INTEGER },
        created_by: { type: DataTypes.INTEGER },
        updated_by: { type: DataTypes.INTEGER },
        status: { type: DataTypes.INTEGER },
        status_from_categories: { type: DataTypes.INTEGER },
        ticket_number: { type: DataTypes.STRING },
        short_description: { type: DataTypes.TEXT },
        long_description: { type: DataTypes.TEXT },
        createdAt: { type: DataTypes.DATE },
        updatedAt: { type: DataTypes.DATE },
        ticket_category: { type: DataTypes.STRING },
        ticket_type: { type: DataTypes.STRING },
        item: { type: DataTypes.STRING },
        reference_number: { type: DataTypes.STRING },
        priority: { type: DataTypes.STRING },
        expected_due_date: { type: DataTypes.DATE },
        openTimeResolverTZ: { type: DataTypes.DATE },
        closedTimeResolverTZ: { type: DataTypes.DATE },
        openTimeCustomerTZ: { type: DataTypes.DATE },
        closedTimeCustomerTZ: { type: DataTypes.DATE },
        hold_start: { type: DataTypes.DATE },
        hold_total: { type: DataTypes.DOUBLE },
        RO_ticket_hop_count: { type: DataTypes.INTEGER },
        RO_assigned_to_group_time: { type: DataTypes.DATE },
        RO_assigned_to_member_time: { type: DataTypes.DATE },
        RO_actual_resolution_sla: { type: DataTypes.DOUBLE },
        RO_actual_response_sla: { type: DataTypes.DOUBLE },
        RO_wl_log: { type: DataTypes.TEXT },
        RO_sla_caldays: { type: DataTypes.DOUBLE },
        RO_sla_bizdays: { type: DataTypes.DOUBLE },
        RO_sla_minutes: { type: DataTypes.DOUBLE },
        RO_open_time: { type: DataTypes.DATE },
        RO_Closed_Time: { type: DataTypes.DATE },
        RO_assigned_to_solver_time: { type: DataTypes.DATE },
        RO_group_sla_caldays: { type: DataTypes.DOUBLE },
        RO_group_sla_minutes: { type: DataTypes.DOUBLE },
        RO_group_sla_bizdays: { type: DataTypes.DOUBLE },
        RO_resolver_sla_caldays: { type: DataTypes.DOUBLE },
        RO_resolver_sla_minutes: { type: DataTypes.DOUBLE },
        RO_resolver_sla_bizdays: { type: DataTypes.DOUBLE },
        RO_AcknowledgedTime: { type: DataTypes.DATE },
    },
    {
      // options
      sequelize,
      modelName: 'wlWorkload',
      tableName: 'wl_workload',
      underscore: true,
    },
  );
  
  return wlWorkload;
};
